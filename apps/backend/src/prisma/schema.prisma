generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model message {
  id          Int      @id @default(autoincrement())
  sender_id   Int
  receiver_id Int
  match_id    Int?
  content     String
  timestamp   DateTime @default(now())

  match                          matches? @relation("MatchToMessages", fields: [match_id], references: [id], map: "Message_match_id_fkey", onDelete: Cascade)
  receiver_message_id users    @relation("receiver_message_id", fields: [receiver_id], references: [id], map: "Message_receiver_id_fkey")
  sender_message_id   users    @relation("sender_message_id", fields: [sender_id], references: [id], map: "Message_sender_id_fkey")

  @@index([match_id], map: "Message_match_id_fkey")
  @@index([receiver_id], map: "Message_receiver_id_fkey")
  @@index([sender_id], map: "Message_sender_id_fkey")
}

model matches {
  id                             Int    @id @default(autoincrement())
  user_1_id                      Int?
  user_2_id                      Int?
  user_match_1 users? @relation("user_match_1", fields: [user_1_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "matches_ibfk_1")
  user_match_2 users? @relation("user_match_2", fields: [user_2_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "matches_ibfk_2")

  messages message[] @relation("MatchToMessages") // ✅ Đồng bộ với model `message`

  @@index([user_1_id], map: "user_1_id")
  @@index([user_2_id], map: "user_2_id")
}

model users {
  id               Int                    @id @default(autoincrement())
  display_name     String                 @db.VarChar(255)
  username         String                 @unique(map: "username") @db.VarChar(100)
  password         String                 @db.VarChar(255)
  email            String                 @unique(map: "email") @db.VarChar(255)
  phone_number     String?                @db.VarChar(20)
  birthday         DateTime?              @db.Date
  gender           users_gender
  preferred_gender users_preferred_gender
  status           users_status?          @default(active)
  time_register    DateTime?              @default(now()) @db.Timestamp(0)

  user_match_1 matches[] @relation("user_match_1")
  user_match_2 matches[] @relation("user_match_2")

  sender_message_id     message[] @relation("sender_message_id") // ✅ Thêm quan hệ ngược
  receiver_message_id message[] @relation("receiver_message_id") // ✅ Thêm quan hệ ngược
}

enum users_gender {
  male
  female
  other
}

enum users_preferred_gender {
  male
  female
  both
}

enum users_status {
  active
  inactive
}
